baseurl             = "https://kareleeckelaert.be"
builddrafts         = false
canonifyurls        = true
contentdir          = "content"
languageCode        = "en-US"
layoutdir           = "layouts"
publishdir          = "public"
theme               = "cocoa"
author              = "Karel Eeckelaert"
title               = "Karel Eeckelaert"
pygmentsuseclasses  = true
# disqusshortname     = "cocoaexamplesite" # Comment out to disable Disqus.
pluralizelisttitles = false
googleAnalytics     = "UA-25534060-1"

[permalinks]
blog  = "blog/:slug/"

[[menu.main]]
name                   = "Blog"
weight                 = -120
identifier             = "blog"
url                    = "/blog/"

[[menu.main]]
name                   = "About"
weight                 = -110
identifier             = "about"
url                    = "/about/"

[[menu.main]]
name                   = "Books"
weight                 = -100
identifier             = "books"
url                    = "/books/"

# [[menu.main]]
# name                   = "Projects"
# weight                 = -100
# identifier             = "projects"
# url                    = "/projects/"

[params]
include_rss            = true                          # include RSS <link> tag in <head> and show RSS icon
latestpostscount       = 5                             # how many posts to display on the home page
i18n_flags             = false                         # whether to display small country flags for available translations
author                 = "Karel Eeckelaert"
cachebuster            = true                          # add the current unix timestamp in query string for cache busting css assets
dateform               = "Jan 2, 2006"
dateformfull           = "Mon Jan 2 2006 15:04:05 MST"
description            = "Hi, I'm Karel. Nice to meet you!"
email                  = "mail@kareleeckelaert.be"
# extracssfiles          = [ "/css/override.css" ]       # In your `static` directory, add/remove files as necessary.
# faviconfile            = "img/leaf.ico"
github                 = "//github.com/koerel"
# instagram              = "//instagram.com/you"
# px500                  = "//500px.com/username"
lang                   = "en"
linkedin               = "//linkedin.com/in/karel-eeckelaert-3127787/"
noshowreadtime         = false                         # if true, don't show "<x> minutes read" in posts
selfintro              = ""                            # appears in the site header when set to a non-empty string
twitter                = "//twitter.com/kareleeckelaert"

highlightjs            = true
# highlightjslanguages = ["go"]                        # additional languages not included in the "common" set
# highlightjsStyle     = "darcula"

piwik                  = false                         # If true, Piwik integration is enabled
# piwik_url            = "//www.example.com/piwik/"    # URL to your Piwik installation. Must End with a slash
# piwik_id             = 2                             # Id of your site in Piwik

gitalk                 = false
# if gitalk is true, the following params should be set. These parameters could be retrieved from github OAuth
gitalk_clientID        = "your client id"
gitalk_clientSecret    = "your client secret"
gitalk_repo            = "your repo url"
gitalk_owner           = "the owner of this repo"
gitalk_admin           = ['a', 'list', 'of', 'administrator']

avatar                 = "img/avatar.jpg" # path to image in static dir e.g img/avatar.png (do not use in the same time as gravatar)
# gravatar             = ""                # gravatar hash. see https://en.gravatar.com/site/implement/hash/. do not use in the same time as avatar

[deployment]

[[deployment.targets]]

name = "s3"

# S3; see https://gocloud.dev/howto/blob/#s3
# For S3-compatible endpoints, see https://gocloud.dev/howto/blob/#s3-compatible
URL = "s3://kareleeckelaert.be?region=eu-central-1"

# Azure Blob Storage; see https://gocloud.dev/howto/blob/#azure
# URL = "azblob://$web"

# You can use a "prefix=" query parameter to target a subfolder of the bucket:
# URL = "gs://<Bucket Name>?prefix=a/subfolder/"

# If you are using a CloudFront CDN, deploy will invalidate the cache as needed.
# cloudFrontDistributionID = <ID>

# Optionally, you can include or exclude specific files.
# See https://godoc.org/github.com/gobwas/glob#Glob for the glob pattern syntax.
# If non-empty, the pattern is matched against the local path.
# All paths are matched against in their filepath.ToSlash form.
# If exclude is non-empty, and a local or remote file's path matches it, that file is not synced.
# If include is non-empty, and a local or remote file's path does not match it, that file is not synced.
# As a result, local files that don't pass the include/exclude filters are not uploaded to remote,
# and remote files that don't pass the include/exclude filters are not deleted.
# include = "**.html" # would only include files with ".html" suffix
# exclude = "**.{jpg, png}" # would exclude files with ".jpg" or ".png" suffix


# [[deployment.matchers]] configure behavior for files that match the Pattern.
# See https://golang.org/pkg/regexp/syntax/ for pattern syntax.
# Pattern searching is stopped on first match.

# Samples:

# [[deployment.matchers]]
# # Cache static assets for 1 year.
# pattern = "^.+\\.(js|css|svg|ttf)$"
# cacheControl = "max-age=31536000, no-transform, public"
# gzip = true

# [[deployment.matchers]]
# pattern = "^.+\\.(png|jpg)$"
# cacheControl = "max-age=31536000, no-transform, public"
# gzip = false

# [[deployment.matchers]]
# # Set custom content type for /sitemap.xml
# pattern = "^sitemap\\.xml$"
# contentType = "application/xml"
# gzip = true

# [[deployment.matchers]]
# pattern = "^.+\\.(html|xml|json)$"
# gzip = true